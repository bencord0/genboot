#!/bin/bash
#
# Copyright 2014 Ben Cordero
#
# This file is part of lxc-create-gentoo.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################
## /usr/local/bin/cloud-init #
##############################

CMDLINE=$(cat /proc/cmdline)
for x in ${CMDLINE}
do
    case "${x}" in
        cloudinit=*)
            CLOUD_INIT_HOST=${x#*=}
            ;;
        cloudinit_retries=*)
            CLOUD_INIT_RETRIES=${x#*=} 
	    ;;
        root=*)
            ROOTFS=${x#*=}
            ;;
        *)
            ;;
    esac
done

CLOUD_INIT_HOST=${CLOUD_INIT_HOST:=169.254.169.254}
CLOUD_INIT_HOST_IP=$(echo ${CLOUD_INIT_HOST}|cut -d'/' -f1|cut -d':' -f1)
CLOUD_INIT_RETRIES=${CLOUD_INIT_RETRIES:=5}

function resize_rootfs {
    ROOTFSTYPE=$(mount | grep "${ROOTFS}" | awk '{print $5}')
    case "${ROOTFSTYPE}" in
        ext*)
            resize2fs "${ROOTFS}"
            ;;
        xfs)
            xfs_grow "${ROOTFS}"
            ;;
        *)
            ;;
    esac
}

function _network_config {
    wget -O /tmp/user-data \
        http://${CLOUD_INIT_HOST}/latest/user-data
    wget -O /tmp/openssh-key \
        http://${CLOUD_INIT_HOST}/latest/meta-data/public-keys/0/openssh-key
    wget -O /tmp/hostname \
        http://${CLOUD_INIT_HOST}/latest/meta-data/hostname

    _file_config
}

function _file_config {
    test -f "/tmp/hostname" && \
    test -n "$(cat /tmp/hostname)" && {
        HOSTNAME=$(cut -d '.' -f1 /tmp/hostname)
        echo "HOSTNAME=\"$HOSTNAME\"" > /etc/conf.d/hostname
        echo "$HOSTNAME" > /etc/hostname
        /etc/init.d/hostname restart || hostnamectl set-hostname "$HOSTNAME"
        /etc/init.d/dhcpcd restart || systemctl is-active dhcpcd && systemctl restart dhcpcd
    }

    test -f "/tmp/openssh-key" && {
        for KEYUSER in admin ec2-user gentoo; do
        test -d "/home/${KEYUSER}" && {
            mkdir -p /home/"${KEYUSER}"/.ssh
            cp /tmp/openssh-key /home/"${KEYUSER}"/.ssh/authorized_keys
            chmod u=rX,go= -R /home/"${KEYUSER}"/.ssh
            chown "${KEYUSER}":"${KEYUSER}" -R /home/"${KEYUSER}"/.ssh
        }
        done
        mkdir -p /root/.ssh
        cp /tmp/openssh-key /root/.ssh/authorized_keys
        chmod u=rX,go= -R /root/.ssh
    }

    test -f "/tmp/user-data" && \
    test _"$(head -c2 /tmp/user-data)" == '_#!' && {
        chmod +x /tmp/user-data
        exec /tmp/user-data
    } || true

    rm -f /tmp/{user-data,openssh-key,hostname}
}

##############################################################

resize_rootfs

# Wait for networking
net_is_ready () {
    ip addr show|grep -v -e 127.0.0.1 -e ::1 -e fe80::| \
        grep inet \
    && (ip r | grep default \
    )||(ip -6 r | grep default) \
    && (ping -c 1 "${CLOUD_INIT_HOST_IP}" \
    )||(ping6 -c 1 "${CLOUD_INIT_HOST_IP}")
}

while [ "${CLOUD_INIT_RETRIES}" != '0' ]
do
	CLOUD_INIT_RETRIES=$[CLOUD_INIT_RETRIES-1]
	net_is_ready && break
	echo "cloud-init: Waiting for network..."
	sleep 5
done

net_is_ready 2>&1 >/dev/null && {
        echo "Attempting autoconfiguration by local network"
        _network_config
} || {
        echo "Attempting autoconfiguration by local file"
        _file_config
}
